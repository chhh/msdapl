<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." name="MS_LIBRARY" default="build_fatjar">

	<property name="target" value="1.6"/>
	<property name="source" value="1.6"/>
		
	<!-- ================================================================================== -->
	<!-- user defined values can be defined in build.properties -->
	<!-- ================================================================================== -->
	<property file="${basedir}/build.properties" />
	
	<!-- ================================================================================== -->
  	<!-- PRINT HELP -->
	<!-- ================================================================================== -->
	<target name="help"   description="print this help">
		<exec executable="ant">
	   		<arg value="-p"/>
	  	</exec>
	</target>
	
	<!-- ================================================================================== -->
	<!-- Setup classpath for svnant -->
	<!-- ================================================================================== -->
	<path id= "svnant.classpath" >
		<fileset dir= "${basedir}/lib" >
			<include name= "*.jar" />
		</fileset>
	</path>
	
	<!-- ================================================================================== -->
	<!-- Test for svnant -->
	<!-- ================================================================================== -->
	<typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svnant.classpath" />
	
	<target name="test_svn_ant" description="Prints the Subversion repository URL and working copy revision">
	     <svn username="${svn.username}" password="${svn.password}">
	        <wcVersion path= "${basedir}" />
	     	<info target="${basedir}"/>
	     </svn>
	     <echo message= "Subversion repository url: ${repository.url}" />
		 <echo message= "Working copy revision: ${svn.info.rev}" />
	</target> 
		
	<!-- get the svn working copy info -->
	<target name="svn_info">
		<svn username="${svn.username}" password="${svn.password}">
			<wcVersion path="${basedir}" prefix="ms_library."/>
		</svn>
		<condition property="wc_modified" else="NO" value="YES">
  			<isset property="ms_library.modified"/>
  		</condition>
		<condition property="wc_mixed" else="NO" value="YES">
  			<isset property="ms_library.mixed"/>
  		</condition>
  		<echo message="Project is at revision ${ms_library.revision.max-with-flags}" />
  		<echo message="Working copy is modifed ${wc_modified}" />
  		<echo message="Working copy is mixed ${wc_mixed}" />
	</target>
	
	<!-- ================================================================================== -->
	<!-- Create a Manifest.MF file with the SVN info -->
	<!-- ================================================================================== -->
	<target name="manifest" depends="prepare">
		<manifest file="${basedir}/MANIFEST.MF">
			<attribute name="Built-By" value="${user.name}"/>
			<attribute name="Date" value="${build-info.current-date}" />
			<attribute name="Time" value="${build-info.current-time}" />
			<attribute name="Svn-Repository-URL" value="${ms_library.repository.url}"/>
			<attribute name="Svn-Revision" value="${ms_library.revision.max-with-flags}"/>
			<attribute name="Svn-Revision-Range" value="${ms_library.revision.range}"/>
			<attribute name="Svn-WorkingCopy-Modified" value="${wc_modified}"/>
			<attribute name="Svn-WorkingCopy-Mixed" value="${wc_mixed}"/>
		</manifest>
	</target>
	
	<!-- Check timestamp on files -->
    <target name="prepare">
    	<tstamp prefix="build-info">
			<format property="current-date" pattern="d-MMMM-yyyy" locale="en" />
			<format property="current-time" pattern="hh:mm:ss a z" locale="en" />
			<format property="year-month-day" pattern="yyyy-MM-dd" locale="en" />
		</tstamp>

    </target>
	
	<!-- ================================================================================== -->
	<!-- Build the jar -->
	<!-- ================================================================================== -->
	<target name="build_jar" depends="compile,svn_info,manifest"
			description="Packages the project as a jar file">
		
		<delete file="${basedir}/mslib.jar" />
		
		<!-- exclude everything in the default packaage-->
		<jar destfile="${basedir}/mslib.jar" 
			basedir="${basedir}/bin"
			excludes="*.*" 
			manifest="${basedir}/MANIFEST.MF">
			
		</jar>
		
	</target>
	
	<!-- ================================================================================== -->
	<!-- Build the FAT jar -->
	<!-- ================================================================================== -->
	<!-- this file was created by Fat-Jar Eclipse Plug-in -->
    <!-- the ANT-Export is in a very early stage, so this -->
    <!-- is only experimental, ANT 1.6 or above is        -->
    <!-- required, feedback is always welcome:            -->
    <!--       http://sourceforge.net/projects/fjep       -->
    <!-- uncomment the following lines if using ANT outside Eclipse -->
    <!--
        <property name="fjepPath" value="reference:file:/Library/Genuitec/Common/plugins/net.sf.fjep.fatjar_0.0.31/fatjar.jar"/>
        <taskdef name="fatjar.build" classname="net.sf.fjep.anttask.FJBuildTask" classpath="${fjepPath}"/>
        <typedef name="fatjar.manifest" classname="net.sf.fjep.anttask.FJManifestType" classpath="${fjepPath}"/>
        <typedef name="fatjar.exclude" classname="net.sf.fjep.anttask.FJExcludeType" classpath="${fjepPath}"/>
        <typedef name="fatjar.jarsource" classname="net.sf.fjep.anttask.FJJarSourceType" classpath="${fjepPath}"/>
        <typedef name="fatjar.filesource" classname="net.sf.fjep.anttask.FJFileSourceType" classpath="${fjepPath}"/>
    -->
    <!-- uncomment the above lines to use ANT outside of Eclipse -->
	<target name="build_fatjar" depends="compile,svn_info,manifest"
			description="Packages the project as a fatjar file">
		
		<delete file="${basedir}/mslib_fat.jar" />
		
		<fatjar.build output="mslib_fat.jar">
            <fatjar.manifest mergemanifests="true" manifestfile="${basedir}/MANIFEST.MF">
            </fatjar.manifest>
            <fatjar.filesource path="bin">
                <fatjar.exclude regexp=".*\..*"/>
            </fatjar.filesource>
            <fatjar.jarsource file="lib/commons-collections-3.2.1.jar" relpath=""/>
            <fatjar.jarsource file="lib/commons-dbcp-1.2.2.jar" relpath=""/>
            <fatjar.jarsource file="lib/commons-logging-1.1.1.jar" relpath=""/>
            <fatjar.jarsource file="lib/commons-math-2.1.jar" relpath=""/>
            <fatjar.jarsource file="lib/commons-pool-1.4.jar" relpath=""/>
            <fatjar.jarsource file="lib/ibatis-2.3.0.677.jar" relpath=""/>
            <fatjar.jarsource file="lib/log4j-1.2.15.jar" relpath=""/>
            <fatjar.jarsource file="lib/mysql-connector-java-5.1.6-bin.jar" relpath=""/>
            <fatjar.jarsource file="lib/yrc_utils.jar" relpath=""/>
            <fatjar.jarsource file="lib/yrc_nrseq.jar" relpath=""/>
            <fatjar.jarsource file="lib/commons-codec-1.4.jar" relpath=""/>
		
        </fatjar.build>
	</target>
	
	
	
	<!-- ================================================================================== -->
	<!-- Clean the build directory -->
	<!-- ================================================================================== -->
    <target name="clean" description="Prepare for clean build">
      <delete dir="bin"/>
      <mkdir  dir="bin"/>
    </target>
	
	<!-- ================================================================================== -->
	<!-- Normal build of application -->
	<!-- ================================================================================== -->
    <target name="compile" depends="clean">
    	<!-- <echo message="${toString:compile.classpath}"/> -->
        <javac debug="on" srcdir="src" destdir="bin" source="${source}" target="${target}">
            <classpath refid="compile.classpath"/>
        </javac>
    	<!-- copy the sqlmap xml files -->
    	<copy todir="bin">
    	    <fileset dir="src"
    	             includes="**/*.xml" />
    	</copy>

    </target>
	
	<!-- classpath  -->
    <path id="compile.classpath">
    	<fileset dir="lib">
        	<include name="**/*.jar"/>
      	</fileset>
        <pathelement path ="bin"/>
    </path>
		

</project>